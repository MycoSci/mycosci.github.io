---
import DocsLayout from '../../layouts/DocsLayout.astro';
import { getDocsNav } from '../../utils/getDocsNav';

export async function getStaticPaths() {
  const pages = import.meta.glob('../../content/docs/**/*.{md,mdx}');
  return Object.keys(pages).map((path) => {
    const relative = path
      .replace('../../content/docs/', '')
      .replace(/\/index\.(md|mdx)$/, '')
      .replace(/\.(md|mdx)$/, '');
    return { params: { slug: relative } };
  });
}

const slugParam = Astro.params.slug;
const slugPath = Array.isArray(slugParam) ? slugParam.join('/') : slugParam;
const pathBase = '../../content/docs/' + slugPath;
const mdxPages = import.meta.glob('../../content/docs/**/*.mdx');
const mdPages = import.meta.glob('../../content/docs/**/*.md');
let pageImport =
  mdxPages[pathBase + '.mdx'] ||
  mdPages[pathBase + '.md'] ||
  mdxPages[pathBase + '/index.mdx'] ||
  mdPages[pathBase + '/index.md'];
let page;
let Content;
let pageTitle = 'Docs';
if (pageImport) {
  page = await pageImport();
  Content = page.default;
  pageTitle = page.frontmatter?.title ?? pageTitle;
} else {
  throw new Error(`Document not found: ${slugPath}`);
}

const nav = getDocsNav();
---
<DocsLayout title={pageTitle} nav={nav}>
  <Content />
</DocsLayout>
